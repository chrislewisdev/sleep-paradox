#include <stdint.h>
#include <tonc.h>
#include "advikku_global.h"
#include "advikku_update.h"
#include "advikku_setup.h"

// --------------------------------------------------------------------
// GLOBAL PLAYER VARIABLES
// --------------------------------------------------------------------

// Advikku variables
uint16_t advik_start = 0;
uint16_t advik_loop_point = 0;
uint16_t advik_ticks_per_row_counter = 6;
uint16_t advik_ticks_per_row_value = 6;
uint16_t advik_current = 0;
uint16_t advik_future = 0;
uint16_t advik_global_order_number = 0;
uint16_t advik_global_order_length = 0;
uint16_t advik_global_channels = 0;
uint16_t advik_global_command_linger = 0;
uint16_t advik_global_volume = 0x0066;
uint16_t advik_change_order = 0;

uint16_t advik_arp_tick = 0;
uint16_t advik_arp_index = 0;

// --------------------------------------------------------------------
// CHANNEL PLAYER VARIABLES
// --------------------------------------------------------------------

struct advikChannel ch[6];

const uint8_t * const * advik_global_current_order;
const uint8_t * advik_global_current_header;
const uint16_t * advik_current_square_instruments;
const uint16_t * advik_current_wave_instruments;
const uint16_t * const * advik_current_waveforms;
const uint16_t * advik_current_noise_instruments;
const uint8_t * const * advik_current_dma_instruments;
const uint16_t * advik_current_dma_durations;

const uint8_t * advik_ch_current_order[6];
const uint8_t * advik_ch_sfx_order[6];
uint16_t advik_ch_sfx_override[6];
uint16_t advik_ch_sfx_current[6];
uint16_t advik_ch_sfx_ticks_per_row_counter[6];
uint16_t advik_ch_sfx_ticks_per_row_value[6];
uint16_t advik_ch_sfx_command_linger[6];

const uint8_t * advik_ch_sfx_current_header[6];
const uint16_t * advik_sfx_current_square_instruments[2];
const uint16_t * advik_sfx_current_wave_instruments;
const uint16_t * const * advik_sfx_current_waveforms;
const uint16_t * advik_sfx_current_noise_instruments;
const uint8_t * const * advik_sfx_current_dma_instruments[2];
const uint16_t * advik_sfx_current_dma_durations[2];

// --------------------------------------------------------------------
// TONE GENERATOR
// --------------------------------------------------------------------

// --------------------------------------------------------------------
// CONSTANTS
// --------------------------------------------------------------------

//generated by Nikku4211's makegbanotetable.py
const uint16_t snd_freqs[]=
{
   0x0020,0x0091,0x00fb,0x0160,0x01bf,0x0219,0x026e,0x02be,0x030a,0x0351,0x0394,0x03d4,
   0x0410,0x0448,0x047e,0x04b0,0x04e0,0x050d,0x0537,0x055f,0x0585,0x05a8,0x05ca,0x05ea,
   0x0608,0x0624,0x063f,0x0658,0x0670,0x0686,0x069b,0x06b0,0x06c2,0x06d4,0x06e5,0x06f5,
   0x0704,0x0712,0x071f,0x072c,0x0738,0x0743,0x074e,0x0758,0x0761,0x076a,0x0773,0x077a,
   0x0782,0x0789,0x0790,0x0796,0x079c,0x07a2,0x07a7,0x07ac,0x07b1,0x07b5,0x07b9,0x07bd,
   0x07c1,0x07c5,0x07c8,0x07cb,0x07ce,0x07d1,0x07d3,0x07d6,0x07d8,0x07db,0x07dd,0x07df,
   0x07e0,0x07e2,0x07e4,0x07e5,0x07e7,0x07e8,0x07ea,0x07eb,0x07ec,0x07ed,0x07ee,0x07ef,
   0x07f0,0x07f1,0x07f2,0x07f3,0x07f3,0x07f4,0x07f5,0x07f5,0x07f6,0x07f7,0x07f7,0x07f8,
};
//also generated by Nikku4211's makegbanotetable.py
const uint16_t dma_snd_freqs[]=
{
   0xe07e,0xe243,0xe3ee,0xe581,0xe6fe,0xe865,0xe9b8,0xeaf9,0xec27,0xed44,0xee51,0xef4f,
   0xf03f,0xf121,0xf1f7,0xf2c1,0xf37f,0xf433,0xf4dc,0xf57c,0xf613,0xf6a2,0xf728,0xf7a7,
   0xf81f,0xf891,0xf8fb,0xf960,0xf9bf,0xfa19,0xfa6e,0xfabe,0xfb0a,0xfb51,0xfb94,0xfbd4,
   0xfc10,0xfc48,0xfc7e,0xfcb0,0xfce0,0xfd0d,0xfd37,0xfd5f,0xfd85,0xfda8,0xfdca,0xfdea,
   0xfe08,0xfe24,0xfe3f,0xfe58,0xfe70,0xfe86,0xfe9b,0xfeaf,0xfec2,0xfed4,0xfee5,0xfef5,
   0xff04,0xff12,0xff1f,0xff2c,0xff38,0xff43,0xff4e,0xff58,0xff61,0xff6a,0xff73,0xff7a,
   0xff82,0xff89,0xff90,0xff96,0xff9c,0xffa2,0xffa7,0xffac,0xffb1,0xffb5,0xffb9,0xffbd,
   0xffc1,0xffc5,0xffc8,0xffcb,0xffce,0xffd1,0xffd3,0xffd6,0xffd8,0xffdb,0xffdd,0xffdf,
};
const int16_t vib_table[]=
{
	     0,   24,   49,   74,   97,  120,  141,  161,
     180,  197,  212,  224,  235,  244,  250,  253,
     255,  253,  250,  244,  235,  224,  212,  197,
     180,  161,  141,  120,   97,   74,   49,   24,
       0,  -24,  -49,  -74,  -97, -120, -141, -161,
    -180, -197, -212, -224, -235, -244, -250, -253,
    -255, -253, -250, -244, -235, -224, -212, -197,
    -180, -161, -141, -120,  -97,  -74,  -49,  -24,
};
// --------------------------------------------------------------------
// MACROS
// --------------------------------------------------------------------